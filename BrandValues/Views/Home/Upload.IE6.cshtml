@model BrandValues.Entries.PostEntry
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Upload";
}

<script>
    var uploaded = '@ViewBag.Uploaded';
</script>

<div class="span-8">
    <div class="item pos-rlt">
        <img class="img-full" src="~/images/upload-ie.png" alt="Upload your individual or team entry">
    </div>
    <div class="panel-heading">
        <ul class="nav nav-tabs font-bold">
            <li>Step 1: Your Details</a></li>
            <li>Step 2: Upload</a></li>
        </ul>
    </div>
</div>

<div class="span-12 prepend-1 ">

    <div class="m-t m-b">




        @using (Html.BeginForm("Upload", "Home", FormMethod.Post, new { id = "wizardform", enctype = "multipart/form-data", data_parsley_validate = "" }))
        {

            @Html.AntiForgeryToken()
            <div class="panel margin-top-20 panel-default">

                <div class="panel-body">
                    <hr />
                    <h3 class="text-success">@Html.Raw(ViewBag.SuccessMessage)</h3>
                    <h4 class="text-danger">@Html.Raw(ViewBag.ErrorMessage)</h4>
                    <hr />

                    <div id="loading" class="centered">
                        <p align="text-center">
                            <img src="~/images/ajax-loader.gif" alt="" />
                            <div class="line line-dashed b-b line-lg pull-in"></div>
                        <p class="text-center" id="waiting"></p>
                        </p>
                    </div>

                    <div class="text-left" id="step1">

                        <p>
                            <label>Competition Entry Name</label>
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @placeholder = "Your entry name" })
                            <span class="help-block">@Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger top-padding" })</span>
                        </p>



                        <p>
                            <label>
                                Description
                            </label>

                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                            <span class="help-block">@Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger top-padding" })</span>
                        </p>


                        <p>
                            <label>
                                Type
                            </label>
                            @{
            List<SelectListItem> typeListItems = new List<SelectListItem>();
            typeListItems.Add(new SelectListItem
            {
                Text = "Individual",
                Value = "individual"
            });
            typeListItems.Add(new SelectListItem
            {
                Text = "Team",
                Value = "team"
            });
                            }
                            @Html.DropDownListFor(model => model.Type, typeListItems.OrderBy(x => x.Text), new { @class = "form-control m-b" })
                            <span class="help-block m-b-none">@Html.ValidationMessageFor(m => m.Type, "", new { @class = "text-danger top-padding" })</span>
                        </p>

                        <div id="teamelements">
                            <p>
                                <label>Team Name</label>
                                @Html.TextBoxFor(model => model.TeamName, new { @class = "form-control" })
                                <span class="help-block">@Html.ValidationMessageFor(m => m.TeamName, "", new { @class = "text-danger top-padding" })</span>
                            </p>

                            <p>
                                <label>How many people on the team?</label>
                                @Html.TextBoxFor(model => model.TeamNumber, new { @class = "form-control" })
                                <span class="help-block">@Html.ValidationMessageFor(m => m.TeamNumber, "", new { @class = "text-danger top-padding" })</span>
                            </p>

                            <p>
                                <label>Names of all team members</label>
                                @Html.TextAreaFor(model => model.TeamMemberNames, new { @class = "form-control" })
                                <span class="help-block">@Html.ValidationMessageFor(m => m.TeamMemberNames, "", new { @class = "text-danger top-padding" })</span>
                            </p>
                        </div>

                        <p>
                            <label>
                                Contact email
                            </label>
                            @Html.TextBoxFor(model => model.ContactEmail, new { @class = "form-control" })
                            <span class="help-block m-b-none">@Html.ValidationMessageFor(m => m.ContactEmail, "", new { @class = "text-danger top-padding" })</span>
                        </p>


                        <p>
                            <label>
                                Contact phone
                            </label>
                            @Html.TextBoxFor(model => model.ContactTel, new { @class = "form-control" })
                            <span class="help-block m-b-none">@Html.ValidationMessageFor(m => m.ContactTel, "", new { @class = "text-danger top-padding" })</span>
                        </p>

                        <p>
                            <label>
                                Format
                            </label>
                            @{
            List<SelectListItem> formatListItems = new List<SelectListItem>();
            formatListItems.Add(new SelectListItem
            {
                Text = "Poem",
                Value = "poem"
            });
            formatListItems.Add(new SelectListItem
            {
                Text = "Story",
                Value = "story"
            });
            formatListItems.Add(new SelectListItem
            {
                Text = "Lyric",
                Value = "lyric"
            });
            formatListItems.Add(new SelectListItem
            {
                Text = "Video",
                Value = "video"
            });
            formatListItems.Add(new SelectListItem
            {
                Text = "Image",
                Value = "image"
            });
            formatListItems.Add(new SelectListItem
            {
                Text = "Other",
                Value = "other"
            });
                            }
                            @Html.DropDownListFor(model => model.Format, formatListItems.OrderBy(x => x.Text), new { @class = "form-control m-b" })
                            <span class="help-block m-b-none">@Html.ValidationMessageFor(m => m.Format, "", new { @class = "text-danger top-padding" })</span>
                        </p>


                        <p>

                            <label>Which AIB Values are demonstrated?</label>


                            <select name="values" class="form-control">
                                <option value="all">All the brand values</option>
                                <option value="customers">We put our customers first</option>
                                <option value="empowering">We are empowering</option>
                                <option value="trust">We are building trust and appreciation</option>
                                <option value="simple">We keep things simple</option>
                                <option value="together">We are better together</option>
                            </select>

                            <span class="help-block">@Html.ValidationMessageFor(m => m.Values, "", new { @class = "text-danger top-padding" })</span>

                        </p>

                        <p>

                            <label>Select your file to upload</label>
                            <input type="file" name="files" class=" filestyle" data-icon="false" data-classbutton="btn btn-default" value="" data-classinput="form-control inline v-middle input-s" id="filestyle-0" style="position: fixed; left: -500px;">
                        </p>
                        
                        
                        <p class="text-warning">Please ensure you consent from everyone who features in your entry before submitting it.</p>
                        <p class="text-warning">If you have any problems trying to submit your entry, please drop us an email at <a href="mailto:aib@valuescompetition.com?Subject=Problems%20uploading">aib@valuescompetition.com</a></p>


                        <div class="centered center">
                            <input type="submit" class="btn btn-primary btn-lg btn-block" id="upload" value="Upload" />
                        </div>

                    </div>

                       



                </div>
            </div>
        }
    </div>

</div>



<div class="span-5 last"></div>



@section Scripts {
    @Scripts.Render("~/Bundles/ie6upload")
}
