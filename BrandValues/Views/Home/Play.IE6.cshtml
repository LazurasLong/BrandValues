@using BrandValues.Entries
@model BrandValues.Models.PlayViewModel
    @{
        ViewBag.Title = "Play";
    }

    <script type="text/javascript">
        var format = '@(Model.Entry.Format)';
        var videoName = '@(Model.Entry.Name)';

        //video Urls
        var networkCheck = '@ViewBag.NetworkCheck';
        var rtmpUrl = '@Html.Raw(ViewBag.RTMPUrl)';
        var appleUrl = '@Html.Raw(ViewBag.AppleUrl)';
        var fallbackUrl = '@Html.Raw(ViewBag.FallbackUrl)';
        var videoThumbnailUrl = '@Html.Raw(ViewBag.VideoThumbnailUrl)';

        //other URls
        var cloudfrontUrl = '@Html.Raw(ViewBag.CloudFrontUrl)';

        var thumbnailUrl = '@Html.Raw(Model.Entry.ThumbnailUrl)';

    </script>





<div class="span-16 colborder">
    <div class="m-t-n-xxs item pos-rlt">

        <div id="mediaplayer" align="center"></div>
        <div id="images" align="center"></div>
        <div id="text" align="center"></div>
        
    </div>

    <div class="entry-info wrapper-lg">

        <div class="span-8">
            <span class="h2 font-thin">@Model.Entry.Name</span><br />
            <span>
                by
                @{
                    if (Model.Entry.TeamName != null)
                    {
                        @(Model.Entry.TeamName)
                    }
                    else
                    {
                        var space = "&nbsp;";
                        @(Model.Entry.UserFirstName)
                        @Html.Raw(space)
                        @(Model.Entry.UserSurname)
                        <br />@(Model.Entry.UserArea)
                    }
                }

            </span>


        </div>


        <div class="span-4 last">



            @if (ViewBag.Voting)
            {
                if (ViewBag.Voted)
                {
                    <div class="pull-right text-sm">
                        <div class="btn btn-success">
                            <i class="fa fa-thumbs-o-up text"></i> Voted
                        </div>
                    </div>
                }
                else
                {

                    <script>

                        $(function () {

                            //Like
                            $("#btn-vote").click(function () {
                                var $form = $('#voteForm');
                                var options = {
                                    url: $form.attr("action"),
                                    type: $form.attr("method"),
                                    data: $form.serialize(),
                                    success: function (response) {

                                        $("#voteForm").hide();
                                        $("#voteresults").removeClass('hidden');


                                        //$('#btn-like').removeClass("btn-default");
                                        //$('#btn-like').addClass("btn-success");
                                        //$("#btn-like").prop('disabled', true);
                                        //$("#likeTxt").html('Liked');
                                    }
                                };

                                $.ajax(options).done(function (data) {

                                    $("#voteForm").hide();
                                    $("#voteresults").removeClass('hidden');

                                    //$('#btn-like').removeClass("btn-default");
                                    //$('#btn-like').addClass("btn-success");
                                    //$("#likeTxt").html('Liked');
                                    //var $target = $('#likeResults');
                                    //$target.replaceWith(data);
                                });

                                return false;
                            });

                        });
                    </script>



                    <form class="pull-right text-sm" id="voteForm" method="post" action="@Url.Action("PostVote")">
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Entry.Id)
                        <button type="submit" class="btn btn-default" id="btn-vote" value="Vote">
                            <i class="fa fa-thumbs-o-up text"></i> <span id="voteTxt">Vote For</span>
                        </button>

                    </form>
                }

            }
            else
            {


                if (ViewBag.Liked)
                {
                    <div class="pull-right text-sm">
                        <div class="btn btn-success">
                            <i class="fa fa-thumbs-o-up text"></i> Liked
                        </div>
                    </div>
                }
                else
                {

                    <script>

                        $(function () {

                            //Like
                            $("#btn-like").click(function () {
                                var $form = $('#likeForm');
                                var options = {
                                    url: $form.attr("action"),
                                    type: $form.attr("method"),
                                    data: $form.serialize(),
                                    success: function (response) {

                                        $("#likeForm").hide();
                                        $("#likeresults").removeClass('hidden');


                                        //$('#btn-like').removeClass("btn-default");
                                        //$('#btn-like').addClass("btn-success");
                                        //$("#btn-like").prop('disabled', true);
                                        //$("#likeTxt").html('Liked');
                                    }
                                };

                                $.ajax(options).done(function (data) {

                                    $("#likeForm").hide();
                                    $("#likeresults").removeClass('hidden');

                                    //$('#btn-like').removeClass("btn-default");
                                    //$('#btn-like').addClass("btn-success");
                                    //$("#likeTxt").html('Liked');
                                    //var $target = $('#likeResults');
                                    //$target.replaceWith(data);
                                });

                                return false;
                            });



                        });
                    </script>



                    <form class="pull-right text-sm" id="likeForm" method="post" action="@Url.Action("PostLike")">
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.Entry.Id)
                        <button type="submit" class="btn btn-default" id="btn-like" value="Comment">
                            <i class="fa fa-thumbs-o-up text"></i> <span id="likeTxt">Thumbs Up</span>
                        </button>

                    </form>
                }
            }


            <div class="pull-right animated fadeInRight hidden" id="likeresults">
                <div class="pull-right text-sm">
                    <div class="btn btn-success">
                        <i class="fa fa-thumbs-o-up text"></i> Liked
                    </div>
                </div>
            </div>

            <div class="pull-right animated fadeInRight hidden" id="voteresults">
                <div class="pull-right text-sm">
                    <div class="btn btn-success">
                        <i class="fa fa-thumbs-o-up text"></i> Voted
                    </div>
                </div>
            </div>

        </div>







    </div>

    <hr />

    <ul class="list-group list-group-lg auto m-b-none m-t-n-xxs">
        <li class="list-group-item margin-bottom clearfix">
           

            <div>
                <span>
                    <span class="h4 font-thin">Description</span><br />
                    <p class="m-t">@Model.Entry.Description</p>

                </span>


            </div>


            @*@using (Ajax.BeginForm("PostComment", new AjaxOptions
                {
                    UpdateTargetId = "comments-result",
                    HttpMethod = "POST",
                    InsertionMode = InsertionMode.Replace
                }))*@

            <hr />
            <div>

                
                    <span class="h4 font-thin">Post a comment</span><br />
               

                @using (Ajax.BeginForm("PostComment", "Home", FormMethod.Post, new AjaxOptions { UpdateTargetId = "comments-result", OnBegin = "OnBegin", LoadingElementId = "loading", OnFailure = "handleError", OnSuccess = "OnSuccess", InsertionMode = InsertionMode.Replace }, new { id = "commentForm" }))
                {

                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.Entry.Id)



                    

                        <textarea name="comment" id="comment" class="form-control" placeholder="Your comment" rows="2"></textarea><br/>
                        <button type="submit" class="btn btn-primary" id="comment-btn" value="Comment">
                            <i class="fa fa-thumbs-o-up text"></i> Comment
                        </button>
                    


                }

                <script type="text/javascript">

                    function OnSuccess(response) {
                        $('#comment').val("");
                        $('#comment-btn').prop('disabled', false);
                    }

                    function OnBegin() {
                        $('#comment-btn').prop('disabled', true);
                    }

                    function handleError(ajaxContext) {
                        //var response = ajaxContext.get_response();
                        //var statusCode = response.get_statusCode();
                        //alert("Sorry, the request failed with status code " + statusCode);

                        $('#loading').html("Sorry an error has occurred.");
                    }

                </script>

                <hr />

                <div id="loading" class="centered">
                    <p align="center">
                        <img src="~/images/ajax-loader.gif" alt="" />
                    </p>
                </div>

                @Html.Partial("_Comments", Model.Entry)

            </div>




        </li>
    </ul>


</div>

<div class="span-6 last">

    <div class="m-t">

        <div class="row entry-centered margin-lr">

            <h4 class="font-thin">Others you may like</h4>

            <div class="row row-sm">
                @foreach (var entry in Model.Entries)
                {

                    <div class="col-xs-6 col-sm-6">
                        <div class="item">
                            <div class="pos-rlt entry-icon">
                                <a href="@Url.Action("Play", "Home", new { id = entry.Id })"><img src="@Html.DisplayFor(modelItem => entry.ThumbnailUrl)" alt="Competition Entry" class="r r-2x img-full"></a>
                            </div>
                            <div class="padder-v entry-icon-padder">
                                <a href="@Url.Action("Play", "Home", new { id = entry.Id })" class="text-ellipsis">@Html.DisplayFor(modelItem => entry.Name)</a>
                                <span class="text-ellipsis text-xs text-muted">
                                    @if (entry.Type == "individual")
                                    {
                                        var space = "&nbsp;";
                                        @Html.DisplayFor(modelItem => entry.UserFirstName)
                                        @Html.Raw(space)
                                        @Html.DisplayFor(modelItem => entry.UserSurname)
                                        <br />@Html.DisplayFor(modelItem => entry.UserArea)
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(modelItem => entry.TeamName)
                                        <br />@Html.DisplayFor(modelItem => entry.UserArea)
                                    }
                                </span>
                            </div>
                        </div>
                    </div>
                }
            </div>

        </div>


    </div>
</div>



    @section Scripts {
        @Scripts.Render("~/Bundles/ie6video")
    }
